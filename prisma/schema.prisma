// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  name          String?
  plan          Plan           @default(FREE)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  analyses      Analysis[]
  subscription  Subscription?
  apiKeys       ApiKey[]
  refreshTokens RefreshToken[]
  auditLogs     AuditLog[]
}

model Analysis {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  brandName       String
  chatgptScore    Int
  googleScore     Int
  analysis        String   @db.Text
  recommendations Json
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId])
  @@index([createdAt])
}

model Subscription {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  plan        Plan
  validUntil  DateTime
  stripeId    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  canceledAt  DateTime?
  paymentInfo Json?

  @@index([userId])
  @@index([validUntil])
}

model ApiKey {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  key       String   @unique
  name      String?
  createdAt DateTime @default(now())
  expiresAt DateTime?
  lastUsed  DateTime?

  @@index([userId])
  @@index([key])
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([token])
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  action    String   // "ANALYSIS_STARTED", "EXPORT_PDF", etc.
  entity    String   // "Analysis", "User", etc.
  entityId  String   // ID of the entity
  metadata  Json?    // Additional data
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([createdAt])
}

enum Plan {
  FREE
  PRO
  ENTERPRISE
}