generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        String   @id @default(uuid())
  slug      String   @unique  // e.g. acme, demo
  name      String?
  plan      String?  @default("free") // free, starter, pro, enterprise
  createdAt DateTime @default(now())

  users            User[]
  visibilityScores VisibilityScore[]
}

model User {
  id               String            @id @default(uuid())
  email            String            @unique
  name             String?
  createdAt        DateTime          @default(now())
  tenantId         String
  tenant           Tenant            @relation(fields: [tenantId], references: [id])
  visibilityScores VisibilityScore[]
  
  @@index([tenantId])
}

model VisibilityScore {
  id            String      @id @default(uuid())
  input         String
  tenantId      String
  tenant        Tenant      @relation(fields: [tenantId], references: [id])
  chatGPTScore  Float?
  googleScore   Float?
  combinedScore Float?
  status        ScoreStatus @default(PENDING)
  error         String?
  details       Json?
  user          User?       @relation(fields: [userId], references: [id])
  userId        String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([input, tenantId])
  @@index([tenantId])
  @@index([userId])
}

enum ScoreStatus {
  PENDING
  COMPLETED
  FAILED
}